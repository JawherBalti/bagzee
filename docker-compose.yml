version: '3.8'
services:
  nginx:
    image: nginx:alpine
    ports:
      - "82:80"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./:/var/www/app
      - vendor-volume:/var/www/app/vendor
    depends_on:
      - php
  php:
    build:
      context: ./docker/php
      target: symfony_php
    volumes:
      - ./:/var/www/app:rw,cached
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - vendor-volume:/var/www/app/vendor
      - /var/www/app/var/cache
#    secrets:
#        -
#          source: ssh_key
#          target: /root/.ssh/id_rsa
    depends_on:
      - db
    environment:
      PHP_IDE_CONFIG: serverName=solutis-server
      CHOKIDAR_USEPOLLING: 1

  webpack:
    image: node:14-alpine
    volumes:
      - ./:/var/www/app:rw,cached
    working_dir: /var/www/app
    command: yarn encore dev --watch

  db:
    image: mariadb:10.3
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: bagzee
      MYSQL_USER: bagzee
      MYSQL_PASSWORD: bagzee
    volumes:
      - ./docker/mysql/data:/var/lib/mysql:delegated

  maildev:
    image: maildev/maildev
    command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
    ports:
      - "8002:80"

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - "8080:80"
    depends_on:
      - db
    environment:
      PMA_HOST: db
      UPLOAD_LIMIT: 1G
  prerender:
    image: bgadrian/docker-prerender

    ports:
        - "3000:3000" 
    restart: always #auto start prerender after reboot.
#secrets:
#  ssh_key:
#    file: ~/.ssh/id_rsa

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
  
volumes:
  vendor-volume:

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
